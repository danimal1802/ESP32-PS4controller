// PS4 controller connected to ESP32
// 
// Baseline examples for reading / testing controller values 
// Note: buttons that can/cannot be pressed simultaneously
// Based on initial work from jvpernis (2019) on Github
// Driver failes to function with accelerometer and gyro data from the controller 


#include <PS4Controller.h>

void setup() {
  Serial.begin(115200);
  PS4.begin("1a:2b:3c:01:01:01");
  Serial.println("Ready.");
}

void loop() {
  // Below has all accessible outputs from the controller
  if (PS4.isConnected()) {
    if (PS4.Left()) Serial.print("L"); else Serial.print(" ");
    if (PS4.Right()) Serial.print("R"); else Serial.print(" ");
    if (PS4.Up()) Serial.print("U"); else Serial.print(" ");
    if (PS4.Down()) Serial.print("D"); else Serial.print(" ");

    if (PS4.UpRight()) Serial.print("UR"); else Serial.print("  ");
    if (PS4.DownRight()) Serial.print("DR"); else Serial.print("  ");
    if (PS4.UpLeft()) Serial.print("UL"); else Serial.print("  ");
    if (PS4.DownLeft()) Serial.print("DL"); else Serial.print("  ");

    if (PS4.Square()) Serial.print("S"); else Serial.print(" ");
    if (PS4.Circle()) Serial.print("C"); else Serial.print(" ");
    if (PS4.Triangle()) Serial.print("T"); else Serial.print(" ");
    if (PS4.Cross()) Serial.print("X"); else Serial.print(" ");

    if (PS4.L1()) Serial.print("L1"); else Serial.print("  ");
    if (PS4.R1()) Serial.print("R1"); else Serial.print("  ");
    Serial.printf(" L2=%3d", PS4.L2Value()); 
    Serial.printf(" R2=%3d", PS4.R2Value());
    //if (PS4.L2()) Serial.print("L2"); else Serial.print("  ");
    //if (PS4.R2()) Serial.print("R2"); else Serial.print("  ");

    if (PS4.Share()) Serial.print("SHR"); else Serial.print("   ");
    if (PS4.Options()) Serial.print("OPT"); else Serial.print("   ");

    //if (PS4.PSButton()) Serial.println("PS Button");
    if (PS4.Touchpad()) Serial.print("PAD"); else Serial.print("   ");

    Serial.printf("LS(%4d", PS4.LStickX()); Serial.printf(",%4d) ", PS4.LStickY());
    Serial.printf("RS(%4d", PS4.RStickX()); Serial.printf(",%4d) ", PS4.RStickY());    

    //Serial.printf(" Xacc:%d",PS4.data.sensor.accelerometer.x); 
    //Serial.printf(" XGyr:%d",PS4.data.sensor.gyroscope.z);
    //if (PS4.Charging()) Serial.println("The controller is charging");
    //if (PS4.Audio()) Serial.println("The controller has headphones attached");
    //if (PS4.Mic()) Serial.println("The controller has a mic attached");

    Serial.printf("[Batt=%3d]",PS4.Battery());
  
    Serial.println();
    // This delay is to make the output more human readable
    // delay(1000);
  }
}
